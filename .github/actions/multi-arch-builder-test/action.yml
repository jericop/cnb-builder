name:        'Test multi-arch builders'
description: 'Test multi-arch builders with buildpacks/samples. Assumes pack is installed'
author:      'Jerico Pena'

runs:
  using: "composite"
  steps:
  - name: Test buildpacks
    shell: bash
    run: |
      #!/usr/bin/env bash -euo pipefail
      set -x

      # Verify lifecycle binary works on this platform
      docker run --rm ghcr.io/jericop/builder-jammy:stack arch
      docker run --rm ghcr.io/jericop/builder-jammy:stack /cnb/lifecycle/lifecycle -version

      if [[ ! -d samples ]]; then git clone https://github.com/buildpacks/samples.git; fi

      cd samples/apps/bash-script/bash-script-buildpack
      mv buildpack.toml original.toml

      cat original.toml

      # Allow any stack to be used and add targets
      cat original.toml | yj -tj | jq '. + {stacks: [{id: "*"}]} + {targets:[{os: "linux", arch: "amd64"}, {os: "linux", arch: "arm64"}]}' | yj -jt > buildpack.toml
      rm original.toml

      cat buildpack.toml

      # Print env to see CNB_TARGET environment variables
      # As outlined here: https://github.com/buildpacks/spec/pull/336/files
      if ! grep -q ^env$ bin/build ; then echo "env" >> bin/build ; fi

      cd ..

      pack version

      # ghcr.io/jericop/builder-jammy:target builder doesn't work because the run image(s) did not get set when it was created
      # TODO: investigate why pack did not set run image as expected
      for tag in stack latest; do
        pack build "sample-bash-script-app:${tag}" --builder "ghcr.io/jericop/builder-jammy:${tag}"
      done